name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - alpha
          - beta
          - rc

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Install Node dependencies
        run: npm ci
      
      - name: Install Frontend dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Build Frontend
        run: npm run build-frontend
      
      - name: Run Tests (if available)
        run: |
          # Add your test commands here when ready
          echo "Tests would run here"
        continue-on-error: true
      
      - name: Build Electron App
        run: npx electron-builder --publish=never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Generate Release Notes
        run: node scripts/generate-release-notes.js
      
      - name: Verify Release Files
        if: matrix.os == 'macos-latest'
        run: |
          echo "Checking for release files..."
          ls -la dist/
          echo "DMG files found:"
          find dist/ -name "*.dmg" -exec echo "  {}" \;
      
      - name: Upload Release Assets
        uses: actions/upload-artifact@v4
        with:
          name: release-files-${{ matrix.os }}
          path: |
            dist/
            RELEASE_NOTES.md
            releases/
      
      - name: Create Release (macOS only)
        if: matrix.os == 'macos-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.dmg
            dist/*.blockmap
            RELEASE_NOTES.md
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          body_path: RELEASE_NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
