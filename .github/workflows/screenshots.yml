name: Automated Screenshots

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  screenshots:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Node.js dependencies
      run: npm install
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Start Django backend
      run: |
        python manage.py migrate
        python manage.py runserver &
        sleep 10
    
    - name: Start React frontend
      run: |
        cd frontend
        npm install
        npm start &
        sleep 30
    
    - name: Capture screenshots
      run: npm run screenshots
    
    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      with:
        name: screenshots
        path: screenshots/
        retention-days: 30
    
    - name: Comment PR with screenshots
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          const screenshotsDir = './screenshots';
          if (fs.existsSync(screenshotsDir)) {
            const files = fs.readdirSync(screenshotsDir);
            const imageFiles = files.filter(file => file.endsWith('.png'));
            
            if (imageFiles.length > 0) {
              let comment = '## ðŸ“¸ Automated Screenshots\n\n';
              comment += 'The following screenshots were automatically captured:\n\n';
              
              imageFiles.forEach(file => {
                comment += `- \`${file}\`\n`;
              });
              
              comment += '\n*Screenshots are available in the artifacts section.*';
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          }
